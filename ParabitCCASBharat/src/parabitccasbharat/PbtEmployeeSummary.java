/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parabitccasbharat;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus
 */
public class PbtEmployeeSummary extends javax.swing.JDialog implements MouseListener {

    /**
     * Creates new form PbtEmployeeSummary
     */
    PbtEmpDashBoard pbtempdashboard;
    DefaultTableModel maintablemodel,secondtablemodel;
    ParabitDBC db;
    ArrayList<String> ceid;
    public PbtEmployeeSummary(PbtEmpDashBoard parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Employee Summary");
        pbtempdashboard=parent;
        maintablemodel=new DefaultTableModel();
        secondtablemodel=new DefaultTableModel();
        db=new ParabitDBC();
        maintablemodel=(DefaultTableModel)maintable.getModel();
        secondtablemodel=(DefaultTableModel)secondtable.getModel();
        ceid=new ArrayList<String>();
        setTable();
        secondtable.setVisible(false);
        maintable.addMouseListener(this);
    }
    private void setTable()
    {
        String te1="";
        int i=1;
        maintablemodel.setRowCount(0);
        String query="select * from pbtemployeetable where crepempid='"+pbtempdashboard.empdata.getEmpid()+"' and status='1'";
        try
        {
            db.rs1=db.stm.executeQuery(query);
            while(db.rs1.next())
            {
                Object ob[]={i++,db.rs1.getString("areastate"),db.rs1.getString("areadist"),db.rs1.getString("areacity"),db.rs1.getString("empname"),
                            db.rs1.getString("empmob"),0,0,0};
                te1=db.rs1.getString("areastate")+"-"+db.rs1.getString("areadist")+"-"+db.rs1.getString("areacity");
                ceid.add(db.rs1.getString("ceid"));
                maintablemodel.addRow(ob);
            }
            db.rs1.close();
        }catch(Exception e)
        {
            e.printStackTrace();
        } 
        t1.setText(te1);
        
    }
    private void setSecondTable(int id)
    {
        int counter=1;
        secondtablemodel.setRowCount(0);
        String query="select * from pbtemployeetable where crepempid='"+ceid.get(id)+"' and status='1'";
        try
        {
            db.rs2=db.stm.executeQuery(query);
            while(db.rs2.next())
            {
                Object ob[]={counter++,db.rs2.getString("areastate"),db.rs2.getString("areadist"),db.rs2.getString("areacity"),db.rs2.getString("empname"),
                           db.rs2.getString("empmob"),0,0,0};
                secondtablemodel.addRow(ob);
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        secondtable.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        secondtable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        maintable = new javax.swing.JTable();
        t1 = new javax.swing.JLabel();
        a1 = new javax.swing.JLabel();
        t2 = new javax.swing.JLabel();
        a2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        secondtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sno", "State", "District", "City", "EmployeeName", "Mobile Number", "Work Alloted", "Work Perfomed", "Work Pending"
            }
        ));
        jScrollPane1.setViewportView(secondtable);
        if (secondtable.getColumnModel().getColumnCount() > 0) {
            secondtable.getColumnModel().getColumn(0).setMinWidth(40);
            secondtable.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        maintable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sno", "State", "District", "City", "EmployeeName", "Mobile Number", "Work Alloted", "Work Performed", "Work Pending"
            }
        ));
        jScrollPane2.setViewportView(maintable);
        if (maintable.getColumnModel().getColumnCount() > 0) {
            maintable.getColumnModel().getColumn(0).setMinWidth(40);
            maintable.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        t1.setText("PCO working under you");

        a1.setText("AREA");

        t2.setText("charge");

        a2.setText("ARea");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1209, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(t1)
                                .addGap(278, 278, 278)
                                .addComponent(a1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(t2)
                                .addGap(371, 371, 371)
                                .addComponent(a2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a1)
                    .addComponent(t1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t2)
                    .addComponent(a2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PbtEmployeeSummary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PbtEmployeeSummary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PbtEmployeeSummary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PbtEmployeeSummary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PbtEmployeeSummary dialog = new PbtEmployeeSummary(new PbtEmpDashBoard(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel a1;
    private javax.swing.JLabel a2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable maintable;
    private javax.swing.JTable secondtable;
    private javax.swing.JLabel t1;
    private javax.swing.JLabel t2;
    // End of variables declaration//GEN-END:variables
@Override
public void mouseClicked(MouseEvent m)
{
    int row=0;
    if(m.getSource()==maintable)
    {
       row=maintable.rowAtPoint(m.getPoint()); 
       setSecondTable(row);
    }
}
@Override
public void mousePressed(MouseEvent m){}
@Override
public void mouseEntered(MouseEvent m){}
@Override
public void mouseExited(MouseEvent m){}
@Override
public void mouseReleased(MouseEvent m){}
}
